name: Provision infrastructure on GCP

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to be used"
        required: true
        type: environment
  workflow_call:
    inputs:
      environment:
        description: "Environment to be used"
        required: true
        type: string
    secrets:
      credentials_json: 
        description: "Credentials JSON to auth to GCP"
        required: true
          
env:
  PATH_TO_TF: terraform/environments/${{ inputs.environment }}
  TF_PLAN: tfplan
  
jobs:
  provision:
    runs-on: ubuntu-latest

    steps:

    - name: Validate input
      run: |
        if [[ "${{ inputs.environment }}" != "Production" && "${{ inputs.environment }}" != "Development" ]]; then
          echo "Invalid environment: ${{ inputs.environment }}"
          exit 1
        fi  
    
    - uses: actions/checkout@v2

    - name: Authenticate with Google Cloud
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform init
      run: |
        terraform -chdir=${{ env.PATH_TO_TF }} init
    
    - name: Terraform plan
      continue-on-error: true
      run: |
        terraform -chdir=${{ env.PATH_TO_TF }} plan -out=${{ env.TF_PLAN }} -var "project_id=${{ secrets.GCP_PROJECT_ID }}"
        terraform -chdir=${{ env.PATH_TO_TF }}  show -json "${{ env.TF_PLAN }}" | jq > ${{ env.TF_PLAN }}.json

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4        
      with:
        name: tfplan
        path: ${{ env.PATH_TO_TF }}/${{ env.TF_PLAN }}.json

    - name: Terraform format
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform apply
      run: terraform -chdir=${{ env.PATH_TO_TF }} apply -auto-approve ${{ env.TF_PLAN }}




