version: '3.8'

services:
  db:
    container_name: database
    build:
      context: ./database
      args:
        - KEYCLOAK_USER=keycloak
        - KEYCLOAK_DB=keycloak
        - KEYCLOAK_PASSWORD=keycloak_password
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - network
    healthcheck:
      test: "pg_isready -U postgres"
      
  rabbitmq:
    image: rabbitmq:latest
    container_name: "rabbitmq"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - network
    healthcheck:
      test: "rabbitmq-diagnostics -q ping"

  keycloak:
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    container_name: "keycloak"
    ports:
      - "8443:8443"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=dev # extra logs + docker settings -> application-dev.properties
    ports:
      - '8080:8080'
    networks:
      - network
    depends_on:
      - keycloak

networks:
  network:
    driver: bridge

