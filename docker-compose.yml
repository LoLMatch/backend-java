services:
  database:
    build:
      context: .
      dockerfile: database/Dockerfile
    image: europe-central2-docker.pkg.dev/lolmatch-415913/backend-java/postgres:${TAG}
    container_name: "database"
    platform: ${PLATFORM}
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    ports:
      - "5432:5432"
    networks:
      - lm-network
    healthcheck:
      test: "pg_isready -U postgres"

  rabbitmq:
    build:
      context: .
      dockerfile: rabbitmq/Dockerfile
    container_name: "rabbitmq"
    platform: ${PLATFORM}
    image: europe-central2-docker.pkg.dev/lolmatch-415913/backend-java/rabbitmq:${TAG}
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - hostname=rabbitmq
      - RABBITMQ_FEATURE_FLAGS=implicit_default_bindings
    networks:
      - lm-network
    healthcheck:
      test: "rabbitmq-diagnostics -q ping"

  keycloak:
    build:
      context: .
      dockerfile: keycloak/Dockerfile
    container_name: "keycloak"
    image: europe-central2-docker.pkg.dev/lolmatch-415913/backend-java/keycloak:${TAG}
    platform: ${PLATFORM}
    ports:
      - "8443:8443"
      - "8444:8444"
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - lm-network
    healthcheck:
      test: ["CMD-SHELL", "echo -n > /dev/tcp/127.0.0.1/8443"]
      retries: 5
      timeout: 60s
      interval: 60s
      start_period: 60s

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    platform: ${PLATFORM}
    image: europe-central2-docker.pkg.dev/lolmatch-415913/backend-java/api-gateway:${TAG}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - '8080:8080'
    networks:
      - lm-network
    depends_on:
      - keycloak

  calendar:
    build:
      context: .
      dockerfile: calendar/Dockerfile
    container_name: calendar
    platform: ${PLATFORM}
    image: europe-central2-docker.pkg.dev/lolmatch-415913/backend-java/calendar:${TAG}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - '8888:8888'
    networks:
      - lm-network
    depends_on:
      keycloak:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  chat-service:
    build:
      context: .
      dockerfile: chat/Dockerfile
    platform: ${PLATFORM}
    container_name: "chat-service"
    image: europe-central2-docker.pkg.dev/lolmatch-415913/backend-java/chat-service:${TAG}
    ports:
      - '8081:8080'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - lm-network
    depends_on:
      keycloak:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  teams-service:
    build:
      context: .
      dockerfile: teams/Dockerfile
    platform: ${PLATFORM}
    container_name: "teams-service"
    image: europe-central2-docker.pkg.dev/lolmatch-415913/backend-java/teams-service:${TAG}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - '8082:8080'
    networks:
      - lm-network
    depends_on:
      keycloak:
        condition: service_healthy
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  discovery-server:
    build:
      context: .
      dockerfile: discovery-server/Dockerfile
    container_name: discovery-server
    platform: ${PLATFORM}
    image: europe-central2-docker.pkg.dev/lolmatch-415913/backend-java/discovery-server:${TAG}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - '8761:8761'
    networks:
      - lm-network

networks:
  lm-network:
    name: lm-network
    driver: bridge
